package service;

import util.ScanUtil;

public class UserService {

	//싱글톤 패턴 (디자인 패턴 중 하나)
	//객체 생성을 막는 패턴
	//객체를 많이 생성하면 메모리만 소비되고 프로그램도 느려짐 -> 그래서 객체를 하나만 만들어서 사용하자
	//1. 객체를 생성하지 못하게 막음 : 생성자 앞에 private을 붙여 호출하지 못하게 함 -> 객체 생성도 못함
	//이 클래스에서 직접 생성해서 빌려주는 방식으로 생성함
	private UserService() {
		
	}
	private static UserService instance; //객체를 보관해놓을 변수
	//객체를 빌려주는 메소드. null일 때 생성해서 return.
	//getInstance를 호출해서 instance를 빌려주는 방식
	public static UserService getInstane() { 
		if(instance == null) {
			instance = new UserService();
		}
		return instance;
	}
	
	public int join() {
		System.out.println("============== 회원가입 ==============");
		System.out.println("아이디 : ");
		String memId = ScanUtil.nextLine();
		System.out.println("비밀번호 : ");
		String password = ScanUtil.nextLine();
		System.out.println("이름 : ");
		String memName = ScanUtil.nextLine();
		//아이디 중복 확인
		//비밀번호 확인
		//유효성 검사(정규표현식)
		
		
	}
}
